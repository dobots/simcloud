<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from test.urdf.xacro                | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="base_rover_cart">
  <!--URDF uses SI Units: meters, radians and kilograms-->
  <!-- Init colour -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="light_black">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="silver">
    <color rgba="0.752941176471 0.752941176471 0.752941176471 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <joint name="astra_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.09 0 0.11"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <visual>
      <origin rpy="1.57079632679 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rover_description/meshes/astra.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!-- might be a bit small... -->
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        0
        
        <box size="0.08 0.18 0.06"/>
      </geometry>
    </collision>
  </link>
  <joint name="camera_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame">
  </link>
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame">
  </link>
  <gazebo reference="camera_link">
    <sensor name="openni_camera_camera" type="depth">
      <always_on>1</always_on>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth_camera>

        </depth_camera>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_depth_frame</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
    <!-- <material>Gazebo/Grey</material> -->
  </gazebo>
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.068"/>
  </joint>
  <!-- Gazebo sensor plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_imu.so" name="imu_plugin">
      <always_on> true </always_on>
      <bodyName> imu_link </bodyName>
      <frameName> imu_link </frameName>
      <topicName> imu </topicName>
      <serviceName> imu_service </serviceName>
      <gaussianNoise> 0.0 </gaussianNoise>
      <updateRate> 200 </updateRate>
      <imu>
        <noise>
          <type> gaussian </type>
          <rate>
            <mean> 0.0 </mean>
            <stddev> 2e-4 </stddev>
            <bias_mean> 0.0000075 </bias_mean>
            <bias_stddev> 0.0000008 </bias_stddev>
          </rate>
          <accel>
            <mean> 0.0 </mean>
            <stddev> 1.7e-2 </stddev>
            <bias_mean> 0.1 </bias_mean>
            <bias_stddev> 0.001 </bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>
  <joint name="rplidar_joint" type="fixed">
    <origin rpy="0 0 3.14" xyz="-0.11 0 0.25"/>
    <parent link="base_link"/>
    <child link="laser"/>
  </joint>
  <link name="laser">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.15"/>
      <geometry>
        <mesh filename="package://rover_description/meshes/lidar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.1"/>
      <geometry>
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="1.5707 0 4.71" xyz="0 0 0.058"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <!-- If you cant't use your GPU comment RpLidar using GPU and uncomment RpLidar using CPU 
    gazebo plugin. -->
  <!-- Noise parameters based on published spec for rplidar laser
    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
    reading. -->
  <!-- RpLidar using GPU -->
  <!--  <gazebo reference="laser">
    <sensor type="gpu_ray" name="head_rplidar_sensor">
      <pose>0 0 0.08 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
    <material>Gazebo/Grey</material>
  </gazebo>
-->
  <!-- RpLidar using CPU -->
  <gazebo reference="laser">
    <sensor name="head_rplidar_sensor" type="ray">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_rplidar_controller">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
    <!-- <material>Gazebo/Grey</material> -->
  </gazebo>
  <!--xacro:include filename="$(find rover_description)/urdf/logo.urdf.xacro"/-->
  <!-- <xacro:include filename="$(find rover_description)/urdf/ar_tag.urdf.xacro"/> -->
  <!-- Base
	<link name="base_footprint"/>

	<joint name="base_joint" type="fixed">
		<origin xyz="0 0 0.105" rpy="0 0 0"/>
                <parent link="base_footprint"/>
	        <child link="base_link"/>
	</joint> -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rover_description/meshes/rover_cart.dae" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.225 0 0.05"/>
      <geometry>
        <box size="0.50 0.35 0.10"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.225 0 0"/>
      <mass value="20"/>
      <!-- in kg -->
      <!-- M=20kg, x=0.5m, y=0.34m, z=0.1m-->
      <inertia ixx="0.2093333" ixy="0.0" ixz="0.0" iyy="0.4333333" iyz="0.0" izz="0.6093333"/>
    </inertial>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <dynamics damping="0.0005" friction="0.00"/>
    <!-- can be set to the right values -->
    <!--limit upper="0.001"/-->
    <!-- set to correct values -->
    <axis xyz="0 1 0"/>
    <origin xyz="0 0.25 0"/>
  </joint>
  <link name="wheel_left_link">
    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rover_description/meshes/wheel_rover.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.000986875" ixy="0.0" ixz="0.0" iyy="0.000145375" iyz="0.0" izz="0.000986875"/>
    </inertial>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.08" radius="0.105"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="wheel_left_link">
    <kp value="50000000.0"/>
    <kd value="0.2"/>
    <minDepth>0.001</minDepth>
    <maxVel>0.01</maxVel>
    <mu1 value="50.0"/>
    <mu2 value="50.0"/>
    <fdir1>1 0 0</fdir1>
    <!--			<material>Gazebo/Grey</material> -->
  </gazebo>
  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <dynamics damping="0.0005" friction="0.00"/>
    <!-- can be set to the right values -->
    <!--limit upper="0.001"/-->
    <!-- set to correct values -->
    <axis xyz="0 1 0"/>
    <origin xyz="0 -0.25 0"/>
  </joint>
  <link name="wheel_right_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rover_description/meshes/wheel_rover.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.000986875" ixy="0.0" ixz="0.0" iyy="0.000145375" iyz="0.0" izz="0.000986875"/>
    </inertial>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.08" radius="0.105"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="wheel_right_link">
    <kp value="50000000.0"/>
    <kd value="0.2"/>
    <minDepth>0.001</minDepth>
    <maxVel>0.01</maxVel>
    <mu1 value="50.0"/>
    <mu2 value="50.0"/>
    <fdir1>1 0 0</fdir1>
    <!--			<material>Gazebo/Grey</material> -->
  </gazebo>
  <joint name="caster_left_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_left_link"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.0005" friction="0.00"/>
    <origin xyz="-0.4 -0.22 -0.03"/>
  </joint>
  <link name="caster_left_link">
    <!--			<visual>
				<origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
				<geometry>
					<cylinder length="0.01" radius="0.057"/>
				</geometry>
			</visual>
-->
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.001"/>
      <!-- M=3kg, h=0.08m, r=0.105m-->
      <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.075"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="caster_left_link">
    <kp value="50000000.0"/>
    <kd value="0.2"/>
    <mu1 value="0.00"/>
    <mu2 value="0.00"/>
    <minDepth>0.001</minDepth>
    <maxVel>0.01</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Orange</material>
  </gazebo>
  <joint name="caster_right_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_right_link"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.0005" friction="0.00"/>
    <origin xyz="-0.4 0.22 -0.03"/>
  </joint>
  <link name="caster_right_link">
    <!--			<visual>
				<origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
				<geometry>
					<cylinder length="0.01" radius="0.057"/>
				</geometry>
			</visual>
-->
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.001"/>
      <!-- M=3kg, h=0.08m, r=0.105m-->
      <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.075"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="caster_right_link">
    <kp value="50000000.0"/>
    <kd value="0.2"/>
    <mu1 value="0.00"/>
    <mu2 value="0.00"/>
    <minDepth>0.001</minDepth>
    <maxVel>0.01</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- logo macro -->
  <!--xacro:logo_tag x_="-0.28" y_="0.0" z_="0.0975" r_="0" p_="0" yaw_="0">
	</xacro:logo_tag-->
  <!-- ar_tag macros -->
  <!-- <xacro:ar_tag number_="5" x_="0.0" y_="0.0" z_="0.15" r_="0.0">
	</xacro:ar_tag> -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="base_rover_controller">
      <commandTopic> cmd_vel </commandTopic>
      <odometryTopic> odom </odometryTopic>
      <odometryFrame> odom </odometryFrame>
      <odometrySource> world </odometrySource>
      <publishOdomTF> true </publishOdomTF>
      <robotBaseFrame> base_link </robotBaseFrame>
      <publishWheelTF> false </publishWheelTF>
      <publishTf> true </publishTf>
      <publishWheelJointState> true </publishWheelJointState>
      <legacyMode> false </legacyMode>
      <updateRate> 100 </updateRate>
      <leftJoint> wheel_left_joint </leftJoint>
      <rightJoint> wheel_right_joint </rightJoint>
      <wheelSeparation> 0.50 </wheelSeparation>
      <wheelDiameter> 0.21 </wheelDiameter>
      <wheelAcceleration> 1 </wheelAcceleration>
      <wheelTorque> 10 </wheelTorque>
      <rosDebugLevel> na </rosDebugLevel>
    </plugin>
  </gazebo>
</robot>

